// Automatically generated by MockGen. DO NOT EDIT!
// Source: net (interfaces: Listener)

package testsupport

import (
	gomock "code.google.com/p/gomock/gomock"
	net "net"
)

// Mock of Listener interface
type MockListener struct {
	ctrl     *gomock.Controller
	recorder *_MockListenerRecorder
}

// Recorder for MockListener (not exported)
type _MockListenerRecorder struct {
	mock *MockListener
}

func NewMockListener(ctrl *gomock.Controller) *MockListener {
	mock := &MockListener{ctrl: ctrl}
	mock.recorder = &_MockListenerRecorder{mock}
	return mock
}

func (_m *MockListener) EXPECT() *_MockListenerRecorder {
	return _m.recorder
}

func (_m *MockListener) Accept() (net.Conn, error) {
	ret := _m.ctrl.Call(_m, "Accept")
	ret0, _ := ret[0].(net.Conn)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockListenerRecorder) Accept() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Accept")
}

func (_m *MockListener) Addr() net.Addr {
	ret := _m.ctrl.Call(_m, "Addr")
	ret0, _ := ret[0].(net.Addr)
	return ret0
}

func (_mr *_MockListenerRecorder) Addr() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Addr")
}

func (_m *MockListener) Close() error {
	ret := _m.ctrl.Call(_m, "Close")
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockListenerRecorder) Close() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Close")
}
