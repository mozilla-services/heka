package message;

message Header {
  enum MessageEncoding {
	PROTOCOL_BUFFER	= 0;
	JSON			= 1;
  }
  enum HmacHashFunction {
	MD5  = 0;
	SHA1 = 1;
  }
  required uint32			message_length   	= 1; // length in bytes
  optional MessageEncoding 	message_encoding	= 2 [default = PROTOCOL_BUFFER];

  optional HmacHashFunction hmac_hash_function	= 3 [default = MD5];
  optional string			hmac_signer			= 4;
  optional uint32			hmac_key_version	= 5;
  optional bytes			hmac				= 6;
}

message Field {
  enum ValueType {
	STRING  = 0;
	BYTES   = 1;
	INTEGER	= 2;
	DOUBLE	= 3;
	BOOL	= 4;
  }
  enum ValueFormat {
    RAW				= 0;

	// http://json-schema.org/latest/json-schema-validation.html#anchor104
	DATE_TIME 	 	= 1; // RFC 3339 Section 5.6
	EMAIL			= 2; // RFC 5322 Section 3.4.1
	HOSTNAME		= 3; // RFC 1034 Section 3.1
	IPV4			= 4; // RFC 2673 Section 3.2
	IPV6			= 5; // RFC 2373 Section 2.2
	URI				= 6; // RFC 3986

	// alternate date/time representations
	// number of <time units> since midnight, 00:00 of January 1, 1970 UTC
	UTC_SECONDS		= 7; // time_t
	UTC_NANOSECONDS	= 8; // Heka timestamp

	// numeric representations
	COUNT			= 9;
	MIN				= 10;
	MAX				= 11;
	AVG				= 12;
	DELTA			= 13;
	PERCENTAGE		= 14;
  }
  required string		name			= 1;
  optional ValueType	value_type		= 2 [default = STRING];
  optional ValueFormat 	value_format	= 3 [default = RAW];
  repeated string		value_string	= 4;
  repeated bytes		value_bytes		= 5;
  repeated int64		value_integer	= 6 [packed=true];
  repeated double		value_double	= 7 [packed=true];
  repeated bool			value_bool		= 8 [packed=true];
}
  
message Message {
  required bytes 	uuid 		= 1;
  required int64	timestamp  	= 2; // nanoseconds since UNIX epoch
  optional string 	type     	= 3;
  optional string	logger    	= 4;
  optional int32	severity   	= 5;
  optional string	payload    	= 6;
  optional string	env_version	= 7;
  optional int32	pid	       	= 8;
  optional string	hostname   	= 9;
  repeated Field	fields		= 10;
}
