0.4.0 (2013-??-??)
==================

Backwards Incompatibilities
---------------------------

* Removed the MessageEncoding enum from the protobuf message (issue #381
eliminated the need since TCP/UDP inputs were the primary users).

* Removed the JSONDecoder (issue #381 eliminated the need).  Note: the 
JsonDecoder only supported message.proto JSON and there is now a generalized 
PayloadJsonDecoder.

* Removed the decoders array configuration in favor of a single MultiDecoder
  (issue #308).
	* Impacts: AMQPInput and LogfileInput.

* SandboxManagerFilter now auto-generates a default working directory based on
  the plugin name, in the ${BASE_DIR}/sbxmgrs folder.

* LogfileInput seek journals now support a boolean `use_seek_journal` config
  flag, and only the name of the journal file is now settable via
  `seek_journal_name`, replacing the `seekjournal` option which specified the
  full path.

* Build is now entirely cmake based and lives directly in the heka repository,
  replacing the separate primarily gnu make driven separate heka-build repo.

* Core Heka plugins now default to writing data to /var/cache instead of
  /var/run since /var/run is usually deleted on server restart.

* StatAccumInput now defaults to emitting stats data in the payload instead of
  in the message fields.

* Renamed LoglineDecoder to PayloadRegexDecoder.

Bug Handling
------------

* Timeout inactive TCPInput connections on shutdown (issue #354)

* Removed all code that attempted to catch and recover from panics in called
  plugin code, since a) the recovery often left Heka in an undefined, broken
  state b) the safety was a lie, any panic in a separate goroutine would not
  be caught and c) panic traceback actually makes it easier to debug.

* WhisperOutput and CarbonOutput no longer require stats to use the `stats`
  namespace prefix.

* LogfileInput now truncates and overwrites the seek journals instead of
  appending.

* `protoc` now an optional dependency for the build, only required if the
  protobuf definition is actually changed.

* MessageTemplate field name interpolation was only supporting alphabetic
  characters for field names, now supports all "word" characters (i.e.
  alphanumeric plus underscore).

* ElasticSearchOutput now always sends timestamps in expected UTC time zone
  format.

* Fixed a CarbonOutput memory / socket leak.

Features
--------

* Added stream parsing to TCP and UDP inputs (issues #381 #165)

* Better enforcement of MAX_MESSAGE_SIZE on input data (issue #333)

* Added SandboxDecoder (issue #370)

* Support Heka protobuf message data in the LogfileInput plugin (issue #261)

* Added "payload" format option to ElasticSearchOutput to pass message payload
  through to ES unchanged.

* Allow LogfileInput to use configurable delimiters including regexp (issue #263)
  This includes a backwards incompatible change for the journal file, old 
  journals will not be honored and the new journal will overwrite it.

* Allow add_external_plugin to specify sub-packages (issue #384)

* Added `base_dir` global (i.e. `[hekad]` section) config option to specify a
  single location Heka plugins should use to persist data to the file system.

* The `hekad` commands `config` flag now supports use of a config directory in
  addition to a single config file. If a directory path is specified, every
  file in the directory will be parsed and they will all be merged to a single
  running configuration.

* Added LogfileDirectoryManagerInput (issue #344).

* LPEG library added to Lua sandbox (issue #144).

* ElasticSearchOutput now supports `logstash_v0` output format that is modeled
  after the original Logstash ElasticSearch message schema.

* Added PayloadJsonDecoder that can extract information from JSON text in a
  message payload during decoding.

0.3.0 (2013-07-16)
==================

* Fixed default (and only supported, for now) sample rate in the stats
  generated by the StatFilter.

* Fixes to the platform specific build constraints around signal handling.

* Added HttpInput that can make HTTP requests to a remote server, placing
  the response body into a message payload.

* Filters and outputs now require a specified message_matcher or they will
  raise an error applying the configuration.

* ticker_interval now exposed as a global config option for inputs, as well
  as outputs and filters.

* Overhaul of StatAccumInput implementation to fix bugs and allow for better
  handling of output format options.

* LoglineDecoder will now default to the current day, month, and year when
  parsing text that contains bare timestamps w/ no date information.

* Added permission checks to FileOutput and WhisperOutput plugins to fail
  gracefully when they've been asked to write to a location where they do not
  have write permission.

* Fixed folder creation permission bugs and allow configurable folder
  permission settings in FileOutput and WhisperOutput.

* `hekad` now emits help message if started w/ no command line options.

* Consistently use underscore_separated_words for plugin TOML configuration
  options.

* Use strings instead of integers to specify octal permission values in the
  config, since TOML doesn't support octal integer values.

* LoglineDecoder config now allows specification of a time zone in case the
  parsed text contains non-UTC timestamps that don't include embedded time
  zone information.

* Removed match capture group support from the router's message matching
  functionality, since this is better done in the decoder layer where the
  back-pressure won't slow down all message delivery. This gets rid of the
  `PipelineCapture` object altogether, so now filter and output plugins deal
  w/ PipelinePacks directly.

* Added ElasticSearch output.

* Lua filters can now emit tables, which will be serialized to JSON and
  put in an injected message payload.

* Custom dashboard javascript now generated by Heka instead of hosted
  remotely.

* Improvements to flood, a Heka protocol load test client.

* Config loading now fails if a config section specifies an unrecognized
  configuration option.

* StatAccumulator now supports stat metric messages with stats data embedded
  in message fields as well as message payload.

* Added support for plugin code to provide message_matcher and ticker_interval
  default values.

* Reimplemented StatMonitor as StatAccumInput, providing a StatAccumulator
  interface.

* SIGUSR1 signals now generate Heka report on stdout instead of sending
  a message so it can be viewed even when message delivery is hosed.

* Added explicit Close() calls to whisperdb files in WhisperOutput.

* Redesigned message field metadata to use string specifiers instead of
  an enum.

* Lua filters can now emit multiple named outputs to the Heka dashboard.

* LogfileInput now supports just one file per input.

* Removed race conditions exposed by Go's race detector.

* Improved self monitoring / dashboard output.

* Improved shutdown message flushing.

* Added Nagios output.

* Added support for LogfileInput to resume parsing where it left off.

* Added AMQP input and output plugins.

* Improved control over sandbox filter message injection restrictions.

* Added support for restartable plugins.

* Moved regular expression and capture group parsing out of the filter layer
  (i.e. in the TransformFilter) and into the decoder layer (i.e.
  LoglineDecoder) to prevent back pressure from impacting the entire router.

0.2.0 (2013-06-26)
==================

* Fix stat name regex to capture "." characters in the name.

0.2.0rc2 (2013-05-23)
=====================

* Fix Lua sandbox C code to work on 32 bit systems.

* Trivial release documentation ReST formatting fix.

0.2.0rc1 (2013-05-21)
=====================

* Use non-https links in docs to prevent bad rendering due to mixed http/https
  content.

* A number of documentation tweaks and updates.

* Static linking of cgo wrapped Lua environment.

* Added LICENSE.txt and CHANGES.txt for better project hygiene.

* Changed default interval for log file reading from 1ms to 500ms so we don't
  churn the machine in default configuration.

* Moved StatPacket channel setup into StatsdInput's Init method (from Run) to
  avoid race conditions.

* Added support for mingw-based Windows build.

* Perform message injection in a goroutine to prevent blocking the router when
  the plugin that is doing the injection has a full in channel.

* Added required pack recycling to TcpOutput.

0.2.0b1 (2013-04-30)
====================

* Initial public release