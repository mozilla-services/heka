diff -Naur lua-5.1.5.orig/CMakeLists.txt lua-5_1_5/CMakeLists.txt
--- lua-5.1.5.orig/CMakeLists.txt	Wed Dec 31 16:00:00 1969
+++ lua-5_1_5/CMakeLists.txt	Fri Aug  2 09:26:42 2013
@@ -0,0 +1,94 @@
+# This Source Code Form is subject to the terms of the Mozilla Public
+# License, v. 2.0. If a copy of the MPL was not distributed with this
+# file, You can obtain one at http://mozilla.org/MPL/2.0/.
+
+cmake_minimum_required(VERSION 2.8 FATAL_ERROR)
+project(lua C)
+set(CMAKE_C_FLAGS "-O2 -Wall")
+
+set(LUA_CJSON_SOURCE
+../lua-cjson-2_1_0/lua_cjson.c
+../lua-cjson-2_1_0/g_fmt.c
+../lua-cjson-2_1_0/dtoa.c
+../lua-cjson-2_1_0/strbuf.c
+)
+
+set(LPEG_SOURCE
+../lpeg-0_12/lpcap.c
+../lpeg-0_12/lpcode.c
+../lpeg-0_12/lptree.c
+../lpeg-0_12/lpvm.c
+)
+
+set(LUA_SOURCE
+src/lapi.c
+src/lauxlib.c
+src/lbaselib.c
+src/lcode.c
+src/ldblib.c
+src/ldebug.c
+src/ldo.c
+src/ldump.c
+src/lfunc.c
+src/lgc.c
+src/linit.c
+src/liolib.c
+src/llex.c
+src/lmathlib.c
+src/lmem.c
+src/loadlib.c
+src/lobject.c
+src/lopcodes.c
+src/loslib.c
+src/lparser.c
+src/lstate.c
+src/lstring.c
+src/lstrlib.c
+src/ltable.c
+src/ltablib.c
+src/ltm.c
+src/lundump.c
+src/lvm.c
+src/lzio.c
+${LPEG_SOURCE}
+${LUA_CJSON_SOURCE}
+)
+include_directories("${CMAKE_SOURCE_DIR}/src")
+add_definitions(-DUSE_INTERNAL_FPCONV)
+add_definitions(-DMULTIPLE_THREADS)
+include(TestBigEndian)
+TEST_BIG_ENDIAN(IEEE_BIG_ENDIAN)
+if(IEEE_BIG_ENDIAN)
+    add_definitions(-DIEEE_BIG_ENDIAN)
+endif()
+
+# Handle platforms missing isinf() macro (Eg, some Solaris systems).
+include(CheckSymbolExists)
+CHECK_SYMBOL_EXISTS(isinf math.h HAVE_ISINF)
+if(NOT HAVE_ISINF)
+    add_definitions(-DUSE_INTERNAL_ISINF)
+endif()
+
+if (MINGW)
+    add_library(lua SHARED ${LUA_SOURCE})
+    set_target_properties(lua PROPERTIES LINK_FLAGS -s)
+    if (ADDRESS_MODEL EQUAL 32)
+        set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -m32")
+        set_target_properties(lua PROPERTIES LINK_FLAGS "-s -m32")
+    endif()
+    set_source_files_properties(${LPEG_SOURCE} PROPERTIES COMPILE_DEFINITIONS LUA_CORE)
+    add_definitions(-DLUA_BUILD_AS_DLL)
+    # Windows sprintf()/strtod() handle NaN/inf differently. Not supported.
+	 add_definitions(-DDISABLE_INVALID_NUMBERS)
+elseif(APPLE)
+    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fPIC")
+    add_library(lua STATIC ${LUA_SOURCE})
+    add_definitions(-DLUA_USE_LINUX)
+    target_link_libraries(lua -lreadline)
+else()
+    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fPIC")
+    add_library(lua STATIC ${LUA_SOURCE})
+endif()
+
+install(TARGETS lua DESTINATION lib)
+install(FILES src/lua.h src/luaconf.h src/lualib.h src/lauxlib.h DESTINATION include)
diff -Naur lua-5.1.5.orig/src/ldebug.c lua-5_1_5/src/ldebug.c
--- lua-5.1.5.orig/src/ldebug.c	Thu May  8 09:56:26 2008
+++ lua-5_1_5/src/ldebug.c	Fri Aug  2 09:26:42 2013
@@ -80,6 +80,10 @@
   return L->basehookcount;
 }
 
+LUA_API int lua_gethookcountremaining (lua_State *L) {
+  return L->hookcount;
+}
+
 
 LUA_API int lua_getstack (lua_State *L, int level, lua_Debug *ar) {
   int status;
diff -Naur lua-5.1.5.orig/src/lua.h lua-5_1_5/src/lua.h
--- lua-5.1.5.orig/src/lua.h	Fri Jan 13 12:36:20 2012
+++ lua-5_1_5/src/lua.h	Fri Aug  2 09:26:42 2013
@@ -341,6 +341,7 @@
 LUA_API lua_Hook lua_gethook (lua_State *L);
 LUA_API int lua_gethookmask (lua_State *L);
 LUA_API int lua_gethookcount (lua_State *L);
+LUA_API int lua_gethookcountremaining (lua_State *L);
 
 
 struct lua_Debug {
diff -Naur lua-5.1.5.orig/src/lualib.h lua-5_1_5/src/lualib.h
--- lua-5.1.5.orig/src/lualib.h	Thu Dec 27 05:02:25 2007
+++ lua-5_1_5/src/lualib.h	Fri Aug  2 09:59:47 2013
@@ -39,6 +39,8 @@
 #define LUA_LOADLIBNAME	"package"
 LUALIB_API int (luaopen_package) (lua_State *L);
 
+#define LUA_LPEGLIBNAME	"lpeg"
+LUALIB_API int (luaopen_lpeg) (lua_State *L);
 
 /* open all previous libraries */
 LUALIB_API void (luaL_openlibs) (lua_State *L); 
